<script type="text/html" id="queryComposerTemplate">
    <ul data-bind="foreach: queries" class="queries">
        <li class="query" data-bind="css: { or: operator() === '||', and: operator() === '&&' }">
            <!-- ko if: !dependantQuery || !collapsed() -->

            <!-- ko if: !dependantQuery-->
            <select class="query-field-operator" data-bind="options: $parent.operators,
                optionsText: 'name',
                value: operator,
                optionsValue: 'value'"></select>
            <!-- /ko -->
            <!-- ko if: dependantQuery-->
            <span class="query-field-operator dependant">&nbsp;</span>
            <!-- /ko -->
            <!-- ko if: !dependantQuery-->
            <select class="query-field-type" data-bind="options: $parent.fieldsDefinition,
                        optionsText: 'text',
                        value: field,
                        optionsCaption: 'Sélectionnez un type de champ...',
                        event: { change: function() { $parent.changeQueryFieldDefinition.call($parent, $data); } }"></select>
            <!-- /ko -->
            <!-- ko if: dependantQuery-->
            <span class="query-field-type dependant" data-bind="text: field().text"></span>
            <!-- /ko -->
            <input type="hidden" data-bind="attr : { name: 'queries[' + $index() + '].type' }, value: field() ? field().type : ''" />
            <input type="hidden" data-bind="attr : { name: 'queries[' + $index() + '].field' }, value: field() ? field().name : ''" />
            <input type="hidden" data-bind="attr : { name: 'queries[' + $index() + '].value' }, value: value" />
            <input type="hidden" data-bind="attr : { name: 'queries[' + $index() + '].operator' }, value: operator" />

            <!-- ko if: field() && field().type != QueryComposer.Model.FieldTypes.Multiple-->
            <span data-bind="if: field().type == QueryComposer.Model.FieldTypes.Text">
                =
                <input class="query-field-value" type="text" data-bind="value: value" />
            </span>
            <span data-bind="if: field().type == QueryComposer.Model.FieldTypes.List">
                =
                <select class="query-field-value" data-bind="options: field().values,
                       optionsText: 'text',
                       optionsValue: 'value',
                       value: value,
                       optionsCaption: 'Sélectionnez une valeur...'"></select>
            </span>
            <!-- /ko -->
            <!-- ko if: field() && field().type == QueryComposer.Model.FieldTypes.Multiple-->
            <span data-bind="if: field().mainField && field().mainField.type == QueryComposer.Model.FieldTypes.Text">
                =
                <input class="query-field-value" type="text" data-bind="value: value" />
            </span>
            <span data-bind="if: field().mainField && field().mainField.type == QueryComposer.Model.FieldTypes.List">
                =
                <select class="query-field-value" data-bind="options: field().mainField.values,
                       optionsText: 'text',
                       optionsValue: 'value',
                       value: value,
                       optionsCaption: 'Sélectionnez une valeur...'"></select>
            </span>
            <!-- /ko -->
            <!-- ko if: !dependantQuery-->
            <button type="button" class="query-btn" data-bind="click: function() { $parent.removeQuery($data); }">
                x
            </button>

            <button type="button" class="query-btn" data-bind="click: function() { $parent.goUp($data); }, enable: $index() != 0">
                up
            </button>

            <button type="button" class="query-btn" data-bind="click: function() { $parent.goDown($data); }, disable: $index() >= ($parent.queries().length - 1)">
                down
            </button>
            <!-- /ko -->

            <!-- ko if: field() && field().type == QueryComposer.Model.FieldTypes.Multiple -->
            <br />
            <button type="button" class="query-btn" data-bind="click: function() { $parent.toggleCollapse($data); }, visible: collapsed()">
                +
            </button>
            <button type="button" class="query-btn" data-bind="click: function() { $parent.toggleCollapse($data);$parent.recomputeResume($data); }, visible: !collapsed()" style="position: absolute;">
                -
            </button>
            <span data-bind="text: resume(), visible: collapsed()"></span>
            <!-- /ko -->

            <!-- /ko -->
        </li>
    </ul>
    <button type="button" data-bind="click: addQuery">
        +
    </button>
</script>