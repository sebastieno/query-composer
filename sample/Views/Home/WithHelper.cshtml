﻿@model SampleApp.Models.IndexModel
@using QueryComposer.MvcHelper
@using QueryComposer.MvcHelper.Model


@{
    var yesNoList = new[] {
        new { Text = "Oui", Value = true },
        new { Text = "Non", Value = false }
    };

    var competencesList = new[] {
        new { Text = "Parle anglais", Value = 1 },
        new { Text = "Autonome", Value = 2 },
        new { Text = "Notions suite Office", Value = 3 },
        new { Text = "Orthographe", Value = 4 }
    };

    var niveauxList = new[] {
        new { Text = "Non", Value = 0 },
        new { Text = "Moyen", Value = 1 },
        new { Text = "Oui", Value = 2 }
    };
}

@Scripts.Render("~/bundles/jquery")
@Html.Partial("_QueryComposer_KoTemplate")

<div class="col-xs-12 main-container fixed-menu">
    <section role="main" id="main">
        <form id="sampleForm">
            <h3>Critères de recherche :</h3>

            @(Html.QueryComposer("samplequery", new QueryComposerConfiguration { ShowNewEmptyLine = true })
                .Fields(builder =>
            {
                builder.AddTextField("Title", "Titre de l'itération");
                builder.AddListField("StatusId", "Statut", new SelectList(Model.Statuses, "Id", "Name"));
                builder.AddListField("IterationId", "Itération", new SelectList(Model.Iterations, "Id", "Name"));
                builder.AddListField("AreaId", "Zone", new SelectList(Model.Areas, "Id", "Name"));
                builder.AddMultipleField("Competence", "Compétence", new SelectList(competencesList, "Value", "Text"), fieldBuilder =>
                    {
                        fieldBuilder.AddListField("Iteration.Current", "Niveau minimum", new SelectList(niveauxList, "Value", "Text"));
                        fieldBuilder.AddTextField("StartDate", "Date de début");
                        fieldBuilder.AddTextField("EndDate", "Date de fin");
                    });
            })
            .Data(new List<Query>()
            {
                new Query { Field = "Title", Operator = "&&", Value = "Mon titre" },
                new Query { Field = "StatusId", Operator = "||", Value = "4" }
            })
            .Render())

            <br />
            <input type="submit" value="Rechercher" />
        </form>

        <div id="response">
        </div>

        <script type="text/javascript">
            $("#sampleForm").submit(function (e) {
                e.preventDefault();

                $.post("@Url.Action("Index")", $(this).serialize())
                .done(function (data) {
                    $("#response").html(data);
                })
                .error(function (e) {
                    alert("Aïe, une erreur est survenue :( !\n\nMessage:\n" + e.responseJSON.message);
                });
            });
        </script>
    </section>
</div>